---
# download_images.yml tasks file for nutanix_prism_role_karbon_enable
- name: Get available karbon images
  uri:
    url: "{{ prism_karbon_api }}/acs/image/list"
    method: GET
    validate_certs: "{{ validate_certs }}"
    body_format: json
    status_code: 200
    headers:
      Authorization: "{{ encoded_credentials }}"
  register: json_karbon_image_list
  ignore_errors: no

- name: Stash the downloaded Karbon images
  set_fact:
    karbon_images_missing: "{{ karbon_images_missing|default([]) + [ {'name': item.version, 'uuid': item.uuid } ] }}"
  with_items: "{{ json_karbon_image_download_list.json }}"
  where:
    - item.status != "Downloaded"

- name: Debug | Print missing Karbon images
  debug:
    var: karbon_images_missing
  when: global_debug

- name: Download available Karbon image(s)
  uri:
    url: "{{ prism_karbon_api }}/acs/image/download"
    body:
      uuid: item.uuid
    method: POST
    validate_certs: "{{ validate_certs }}"
    body_format: json
    status_code: 200
    headers:
      Authorization: "{{ encoded_credentials }}"
  register: karbon_image_download
  ignore_errors: no
  with_items: "{{ karbon_images_missing }}"

- name: Debug | Count images
  debug:
    var: json_karbon_image_list.json | list | count
  when: global_debug

- name: Debug | Count of downloaded images
  debug:
    var: json_karbon_image_list.json | selectattr('status','equalto','Downloaded') | list | count
  when: global_debug

- name: Wait for image(s) to complete download
  uri:
    url: "{{ prism_karbon_api }}/acs/image/list"
    method: GET
    validate_certs: "{{ validate_certs }}"
    body_format: json
    status_code: 200
    headers:
      Authorization: "{{ encoded_credentials }}"
  register: json_karbon_image_download_list
  ignore_errors: no
  until:
    - json_karbon_image_download_list.json | selectattr('status','equalto','Downloaded) | list | count == json_karbon_image_download_list.json | list | count

- name: Stash the downloaded Karbon images
  set_fact:
    karbon_images_available: "{{ karbon_images_available|default([]) + [ {'name': item.version, 'uuid': item.uuid } ] }}"
  with_items: "{{ json_karbon_image_download_list.json }}"

- name: Debug | Print available Karbon images
  debug:
    var: karbon_images_available
  when: global_debug

